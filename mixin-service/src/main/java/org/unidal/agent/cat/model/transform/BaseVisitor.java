/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.agent.cat.model.transform;

import org.unidal.agent.cat.model.IVisitor;
import org.unidal.agent.cat.model.entity.ClassModel;
import org.unidal.agent.cat.model.entity.EventModel;
import org.unidal.agent.cat.model.entity.MethodModel;
import org.unidal.agent.cat.model.entity.RootModel;
import org.unidal.agent.cat.model.entity.TransactionModel;

public abstract class BaseVisitor implements IVisitor {
   @Override
   public void visitClass(ClassModel _class) {
      for (MethodModel method : _class.getMethods()) {
         visitMethod(method);
      }
   }

   @Override
   public void visitEvent(EventModel event) {
   }

   @Override
   public void visitMethod(MethodModel method) {
      if (method.getTransaction() != null) {
         visitTransaction(method.getTransaction());
      }

      if (method.getEvent() != null) {
         visitEvent(method.getEvent());
      }
   }

   @Override
   public void visitRoot(RootModel root) {
      for (ClassModel class_ : root.getClasses().values()) {
         visitClass(class_);
      }
   }

   @Override
   public void visitTransaction(TransactionModel transaction) {
   }
}
