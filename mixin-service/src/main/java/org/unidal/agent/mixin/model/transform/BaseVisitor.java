/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.agent.mixin.model.transform;

import org.unidal.agent.mixin.model.IVisitor;
import org.unidal.agent.mixin.model.entity.ClassModel;
import org.unidal.agent.mixin.model.entity.FieldModel;
import org.unidal.agent.mixin.model.entity.InnerClassModel;
import org.unidal.agent.mixin.model.entity.MethodModel;
import org.unidal.agent.mixin.model.entity.MixinModel;
import org.unidal.agent.mixin.model.entity.SourceModel;
import org.unidal.agent.mixin.model.entity.TargetModel;

public abstract class BaseVisitor implements IVisitor {
   @Override
   public void visitClass(ClassModel _class) {
      if (_class.getTarget() != null) {
         visitTarget(_class.getTarget());
      }

      for (SourceModel source : _class.getSources()) {
         visitSource(source);
      }
   }

   @Override
   public void visitField(FieldModel field) {
   }

   @Override
   public void visitInnerClass(InnerClassModel innerClass) {
   }

   @Override
   public void visitMethod(MethodModel method) {
   }

   @Override
   public void visitMixin(MixinModel mixin) {
      for (ClassModel class_ : mixin.getClasses().values()) {
         visitClass(class_);
      }
   }

   @Override
   public void visitSource(SourceModel source) {
      for (FieldModel field : source.getFields()) {
         visitField(field);
      }

      for (MethodModel method : source.getMethods()) {
         visitMethod(method);
      }

      for (InnerClassModel innerClass : source.getInnerClasses()) {
         visitInnerClass(innerClass);
      }
   }

   @Override
   public void visitTarget(TargetModel target) {
      for (FieldModel field : target.getFields()) {
         visitField(field);
      }

      for (MethodModel method : target.getMethods()) {
         visitMethod(method);
      }

      for (InnerClassModel innerClass : target.getInnerClasses()) {
         visitInnerClass(innerClass);
      }
   }
}
