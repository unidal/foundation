/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.mixin.model.entity;

import static org.unidal.mixin.model.Constants.ATTR_INNER_NAME;
import static org.unidal.mixin.model.Constants.ENTITY_INNER_CLASS;

import org.unidal.mixin.model.BaseEntity;
import org.unidal.mixin.model.IVisitor;

public class InnerClassModel extends BaseEntity<InnerClassModel> {
   private Integer m_access;

   private String m_name;

   private String m_outerName;

   private String m_innerName;

   private String m_sourceName;

   private String m_sourceOuterName;

   public InnerClassModel() {
   }

   public InnerClassModel(String innerName) {
      m_innerName = innerName;
   }

   @Override
   public void accept(IVisitor visitor) {
      visitor.visitInnerClass(this);
   }

   @Override
   public boolean equals(Object obj) {
      if (obj instanceof InnerClassModel) {
         InnerClassModel _o = (InnerClassModel) obj;

         if (!equals(getInnerName(), _o.getInnerName())) {
            return false;
         }

         return true;
      }

      return false;
   }

   public Integer getAccess() {
      return m_access;
   }

   public String getInnerName() {
      return m_innerName;
   }

   public String getName() {
      return m_name;
   }

   public String getOuterName() {
      return m_outerName;
   }

   public String getSourceName() {
      return m_sourceName;
   }

   public String getSourceOuterName() {
      return m_sourceOuterName;
   }

   @Override
   public int hashCode() {
      int hash = 0;

      hash = hash * 31 + (m_innerName == null ? 0 : m_innerName.hashCode());

      return hash;
   }

   @Override
   public void mergeAttributes(InnerClassModel other) {
      assertAttributeEquals(other, ENTITY_INNER_CLASS, ATTR_INNER_NAME, m_innerName, other.getInnerName());

      if (other.getAccess() != null) {
         m_access = other.getAccess();
      }

      if (other.getName() != null) {
         m_name = other.getName();
      }

      if (other.getOuterName() != null) {
         m_outerName = other.getOuterName();
      }

      if (other.getSourceName() != null) {
         m_sourceName = other.getSourceName();
      }

      if (other.getSourceOuterName() != null) {
         m_sourceOuterName = other.getSourceOuterName();
      }
   }

   public InnerClassModel setAccess(Integer access) {
      m_access = access;
      return this;
   }

   public InnerClassModel setInnerName(String innerName) {
      m_innerName = innerName;
      return this;
   }

   public InnerClassModel setName(String name) {
      m_name = name;
      return this;
   }

   public InnerClassModel setOuterName(String outerName) {
      m_outerName = outerName;
      return this;
   }

   public InnerClassModel setSourceName(String sourceName) {
      m_sourceName = sourceName;
      return this;
   }

   public InnerClassModel setSourceOuterName(String sourceOuterName) {
      m_sourceOuterName = sourceOuterName;
      return this;
   }

}
